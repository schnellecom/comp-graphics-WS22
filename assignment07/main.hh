/*===========================================================================*/
/*                                                                           *
 * Copyright (c) 2020, Computer Graphics Group RWTH Aachen University        *
 *                            All rights reserved                            *
 *                                                                           *
 * Basic Techniques in Computer Graphics Exercise                            *
 *                            DO NOT EDIT THIS FILE!                         *
 *                                                                           */
/*===========================================================================*/

#pragma once

#include <glad/glad.h>
/// make sure inclusion of glad.h does not come after glfw

#include <GLFW/glfw3.h>


#include <iostream>

// OpenGL Math:
#include <glm/ext.hpp>
#include <glm/glm.hpp>
#include <glm/gtc/matrix_transform.hpp>

extern int g_numberOfTeapotVertices;
extern int g_numberOfTeapotTriangles;
extern int g_teapotVertexStrideSize;
extern int g_teapotElementStrideSize;

extern float g_teapotVertices[];
extern unsigned int g_teapotElements[];

extern glm::mat4 modelViewMatrix;
extern glm::mat4 projectionMatrix;

// reads a textfile and returns the content as one string:
// if you need a const char** you can do something like:
//   std::string foo = getFileContent( "bar" );
//	 const char *foo_c = foo.c_str();
// 	 usePointerToCStringArray( &foo_c );
std::string getFileContent(const std::string& fileName);

glm::mat4 buildFrustum(float phiInDegree, float aspectRatio, float near, float far);

void resizeCallback(int newWidth, int newHeight);

void setupShaderUniforms(GLuint _program, int _scene);

void createShaderProgram(GLuint& vs, GLuint& fs, GLuint& prog, const std::string& vsFileName, const std::string& fsFileName);
